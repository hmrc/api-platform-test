# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName=api-platform-test

appUrl="http://localhost:9803"

include "backend.conf"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Other modules
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "uk.gov.hmrc.apiplatformtest.config.ConfigurationModule"


# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {

    # 300 is the default, you may need to change this according to your needs
    confidenceLevel = 300

    uk.gov.hmrc.play.health.HealthController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }
    
    uk.gov.hmrc.apiplatformtest.controllers.DocumentationController = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }

    uk.gov.hmrc.apiplatformtest.controllers.HelloController = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }

    uk.gov.hmrc.apiplatformtest.controllers.CiaoController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }

    uk.gov.hmrc.apiplatformtest.controllers.CityController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }

    uk.gov.hmrc.apiplatformtest.controllers.CheckFakeIpController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }

    uk.gov.hmrc.apiplatformtest.controllers.XmlController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }

    uk.gov.hmrc.apiplatformtest.controllers.JsonController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }

    uk.gov.hmrc.apiplatformtest.controllers.NrsController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }

    uk.gov.hmrc.apiplatformtest.controllers.HeadersController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }

    uk.gov.hmrc.apiplatformtest.controllers.FraudPreventionController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }

    uk.gov.hmrc.apiplatformtest.controllers.PrivilegedApiController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }

    uk.gov.hmrc.apiplatformtest.controllers.NotificationsController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }
}



# Microservice specific config
wiremock-port = 11111
wiremock-port = ${?WIREMOCK_PORT}



microservice {
    services {
        datastream {
            host = localhost
            port = ${wiremock-port}
            enabled = false
        }

        auth {
            host = localhost
            port = ${wiremock-port}
        }

        push-pull-notifications-api {
            host = localhost
            port = 6701
        }
    }
}
